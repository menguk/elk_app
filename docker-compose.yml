version: "3.3"
services:
  nfs_server:
    image: itsthenetwork/nfs-server-alpine:12
    environment:
      SHARED_DIRECTORY: /nfsshare
    volumes:
      - ./share:/nfsshare
    ports:
      - 2049:2049
    cap_add:
      - SYS_ADMIN
      - SETPCAP
    privileged: true
    depends_on:
      - kibana
    networks:
      - nfs
      
  pmd:
    build:
       context: ./pmd-bin-6.33.0
       args:
        - URL_REPO=https://github.com/otale/tale
        - NFS_SHARE_RESOURCE=172.17.0.2:/nfsshare
    depends_on:
       - nfs_server
    networks:
      - elk
      - nfs
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://localhost:5000"
        tag: "pmd-logs"

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

networks:
  elk:
    driver: bridge
  nfs:
    driver: bridge

volumes:
  elasticsearch:
